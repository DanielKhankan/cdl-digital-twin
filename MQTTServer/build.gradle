import org.apache.tools.ant.taskdefs.condition.Os

group 'at.ac.tuwien.big'
version = '0.0.1-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'at.ac.tuwien.big.MainKt'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    jcenter()
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

task installWeb(type: Exec) {
    workingDir 'src/main/resources/static'
    inputs.file("package-lock.json")
    inputs.file("package.json")
    outputs.dir("node_modules")
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine "cmd", "/c", "npm", "install"
    } else {
        commandLine "npm", "install"
    }
}

task buildWeb(type: Exec) {
    workingDir 'src/main/resources/static'
    inputs.dir("src")
    inputs.dir("assets")
    outputs.dir("dist")
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine "cmd", "/c", "npm", "run", "build"
    } else {
        commandLine "npm", "run", "build"
    }

}

run.dependsOn buildWeb
buildWeb.dependsOn installWeb

jar.dependsOn buildWeb
buildWeb.dependsOn installWeb

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.23.0"
    compile "io.javalin:javalin:0.5.4"
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
    compile "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.1"
    compile "org.eclipse.jetty.websocket:websocket-server:9.4.7.v20170914"
    compile "com.google.code.gson:gson:2.8.1"
    compile "com.espertech:esper:6.1.0"
    compile "org.influxdb:influxdb-java:2.7"
    compile "com.google.zxing:core:3.3.0"
    compile "commons-io:commons-io:2.4"
    compile "com.github.kittinunf.fuel:fuel:1.13.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.5"
    compile 'com.github.sarxos:webcam-capture:0.3.10'
    testCompile "junit:junit:4.12"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
